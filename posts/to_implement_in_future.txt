class SelfTimeline(APIView,PaginationHandlerMixin):
    pagination_class = BasicPagination
    def get(self,request):


        user = request.user
        user_full_name = str(user.first_name)+" " +str(user.last_name)
        full_name = str(user.first_name)+" " +str(user.last_name)

        activity_list = Activity.objects.filter(user=user).order_by('-created_at')
        page = self.paginate_queryset(activity_list)
        to_send = []
        print("page is",page)

        for activity_obj in page:
            
            activity_type = activity_obj.activity_type
            post_id = activity_obj.post_id

            thumbnail = user.profile_photo.url

            # is_liked = is_feed_post_liked(user,post_obj)
            print("activity_type is",activity_type)

            if activity_type == 'like_feed_post':
                activity_message = '{} likes this'.format(full_name)
                post_obj = FeedPost.objects.get(id=post_id)
                is_liked = is_feed_post_liked(user,post_obj)

            if activity_type == 'create_feed_post':
                activity_message = '{} added this post'.format(full_name) 
                post_obj = FeedPost.objects.get(id=post_id)
                is_liked = is_feed_post_liked(user,post_obj)

            if activity_type == 'share_feed_post':
                activity_message = '{} shared this post'.format(full_name) 
                post_obj = FeedPost.objects.get(id=post_id)
                is_liked = is_feed_post_liked(user,post_obj)


            if activity_type == 'comment_feed_post':
                activity_message = '{} commented on this'.format(full_name)        
                post_obj = FeedPost.objects.get(id=post_id)
                is_liked = is_feed_post_liked(user,post_obj)
            
            image = post_obj.image

            if image.name!=u'':
                print("length of name is ",len(image.name))
                image = image.url
            else:
                image = None    

            print("image is",image)            
            to_add = {
                "thumbnail":thumbnail,
                "full_name":full_name,
                "user_id":user.id,
                "activity_message":activity_message,
                "post_id":post_obj.id,
                "is_edited":post_obj.is_edited,
                "is_comment_disabled":post_obj.is_comment_disabled,
                "no_of_likes":post_obj.no_of_likes,
                "no_of_comments":post_obj.no_of_comments,
                "content":post_obj.content,
                "image":image,
                "is_liked":is_liked,
                
                
            }

            to_send.append(to_add)


        print("to_send is",to_send)
        to_send = self.get_paginated_response(to_send)
        print("to_send is",to_send)

        return Response({"success":True,"data":to_send.data,"msg":"ok"},status=200)

class OthersTimeLine(APIView,PaginationHandlerMixin):
    pagination_class = BasicPagination
    def post(self,request):


        user = request.user
        user_full_name = str(user.first_name)+" " +str(user.last_name)
        full_name = str(user.first_name)+" " +str(user.last_name)

        activity_list = Activity.objects.filter(user=user,activity_type='create_feed_post').order_by('-created_at')
        page = self.paginate_queryset(activity_list)
        to_send = []
        print("page is",page)

        for activity_obj in page:
            
            
            post_id = activity_obj.post_id

            thumbnail = user.profile_photo.url
            activity_message = '{} added this post'.format(full_name) 
            post_obj = FeedPost.objects.get(id=post_id)
            is_liked = is_feed_post_liked(user,post_obj)

            
            image = post_obj.image

            if image.name!=u'':
                print("length of name is ",len(image.name))
                image = image.url
            else:
                image = None    

            print("image is",image)            
            to_add = {
                "thumbnail":thumbnail,
                "full_name":full_name,
                "user_id":user.id,
                "activity_message":activity_message,
                "post_id":post_obj.id,
                "is_edited":post_obj.is_edited,
                "is_comment_disabled":post_obj.is_comment_disabled,
                "no_of_likes":post_obj.no_of_likes,
                "no_of_comments":post_obj.no_of_comments,
                "content":post_obj.content,
                "image":image,
                "is_liked":is_liked,
                
                
            }

            to_send.append(to_add)


        print("to_send is",to_send)
        to_send = self.get_paginated_response(to_send)
        print("to_send is",to_send)

        return Response({"success":True,"data":to_send.data,"msg":"ok"},status=200)